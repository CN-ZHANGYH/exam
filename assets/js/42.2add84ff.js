(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{349:function(_,v,t){"use strict";t.r(v);var a=t(6),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-数据流图详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据流图详解"}},[_._v("#")]),_._v(" 1.数据流图详解")]),_._v(" "),v("h3",{attrs:{id:"_1-1-数据流图的概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据流图的概念"}},[_._v("#")]),_._v(" 1.1 数据流图的概念")]),_._v(" "),v("p",[_._v("它是将提供给用户的业务流程图(“物理模型”)进行功能建模，转化成开发人员能够理解的一系列“逻辑模型”图，即以图形化的方法描绘数据在系统中的流动和处理的过程，这些图都应该用规范的DFD描述。")]),_._v(" "),v("p",[v("strong",[_._v("1.上下文数据流图")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/image-20221219200230042.png",alt:"image-20221219200230042"}})]),_._v(" "),v("p",[v("strong",[_._v("2.层数据流图")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/image-20221219200239426.png",alt:"image-20221219200239426"}})]),_._v(" "),v("h3",{attrs:{id:"_1-2-数据流图的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数据流图的原理"}},[_._v("#")]),_._v(" 1.2 数据流图的原理")]),_._v(" "),v("p",[_._v("DFD设计过程就是将数据和处理进行逐层分解就形成了若干层次的DFD。DFD分为顶层图(只有一张)、0层图(也只有一张)、子图、子子图等等。")]),_._v(" "),v("p",[v("strong",[_._v("包含主要元素：")])]),_._v(" "),v("p",[_._v("即在DFD中包括哪些主要元素，数据流、加工、数据存储、外部实体。")]),_._v(" "),v("ol",[v("li",[v("code",[_._v("数据流")]),_._v("：用单箭头表示，如"),v("code",[_._v("――>")]),_._v("。是由一组固定成分的数据组成，表示数据的流向。"),v("code",[_._v("数据流图中描述的是数据流，而不是控制流")]),_._v("。除了流向数据存储或从数据存储流出的数据不必命名外，每个数据流必须要有一个合适的名字，以反映该数据流的含义。")]),_._v(" "),v("li",[v("code",[_._v("加工")]),_._v("：用圆或椭圆表示，如"),v("code",[_._v("〇")]),_._v("。描述了输入数据流到输出数据之间的变换，也就是输入数据流经过什么处理后变成了输出数据。每个加工都有一个名字和编号。编号能反映该加工位于分层的数据流图的哪个层次和哪张图中，能够看出它是由哪个加工分解出来的子加工。")]),_._v(" "),v("li",[v("code",[_._v("数据存储")]),_._v("：用双杠(带一边开口,一边闭合)表示, 又叫做文件，数据存储表示暂时存储的数据。每个数据存储都有一个名字。")]),_._v(" "),v("li",[v("code",[_._v("外部实体")]),_._v("：用实心长方形表示，如"),v("code",[_._v("███")]),_._v("。外部实体是存在于软件系统之外的人员或组织，他指出数据所需要的发源地或系统所产生的数据的归属地。")])]),_._v(" "),v("h3",{attrs:{id:"_1-3-数据流图设计方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-数据流图设计方法"}},[_._v("#")]),_._v(" 1.3 数据流图设计方法")]),_._v(" "),v("ol",[v("li",[v("code",[_._v("画顶层数据流图")]),_._v("：\n"),v("ul",[v("li",[_._v("即画整个系统的输入输出(画系统也可以将各子系统分开画)。")]),_._v(" "),v("li",[_._v("**把整个系统视为一个大的加工(也只能含一个加工)，**然后根据数据系统从哪些外部实体接收数据流，以及系统发送数据流到那些外部实体，就可以画出输入输出图。这张图称为顶层图。")]),_._v(" "),v("li",[_._v("顶层图的作用在于表明被开发系统的范围以及它和周围环境的数据交换关系。")])])]),_._v(" "),v("li",[v("code",[_._v("画0层数据流图")]),_._v(":\n"),v("ul",[v("li",[_._v("即画系统的内部。")]),_._v(" "),v("li",[_._v("**把顶层图的加工分解成若干个加工，并用数据流将这些加工连接起来，使得顶层图的输入数据经过若干加工处理后，变成顶层图的输出数据流。**这张图称为0层图。从一个加工画出一张数据流图的过程就是对加工的分解。")]),_._v(" "),v("li",[_._v("**确定加工的方法：**在数据流的组成或值发生变化的地方应该画出一个加工，这个加工的功能就是实现这一变化，也可以根据系统的功能决定加工。")]),_._v(" "),v("li",[_._v("**确定数据流的方法：**用户把若干数据当作一个单位来处理(这些数据一起到达、一起处理)时，可以把这些数据看成一个数据流。")]),_._v(" "),v("li",[_._v("**关于数据存储：**对于一些以后某个时间要使用的数据，可以组织成为一个数据存储来表示。")])])]),_._v(" "),v("li",[v("code",[_._v("画加工的内部")]),_._v(":\n"),v("ul",[v("li",[_._v("把每个加工看作一个小系统，把加工的输入输出数据流看成小系统的输入输出流。于是可以象画0层图一样画出每个小系统的加工的DFD图。")])])]),_._v(" "),v("li",[v("code",[_._v("画子加工的分解图")]),_._v(":\n"),v("ul",[v("li",[_._v("对第三步分解出来的DFD图中的每个加工，重复第三步的分解过程，直到图中尚未分解的加工都是足够简单的(即不可再分解)。至此，得到了一套分层数据流图。")])])]),_._v(" "),v("li",[v("code",[_._v("对数据流图和加工编号")]),_._v(":\n"),v("ul",[v("li",[_._v("对于一个软件系统，其数据流图可能有许多层，每一层又有许多张图。为了区分不同的加工和不同的DFD子图，应该对每张图进行编号，以便于管理。")]),_._v(" "),v("li",[_._v("顶层图只有一张，图中的加工也只有一个，所以不必为其编号。")]),_._v(" "),v("li",[_._v("0层图只有一张，图中的加工号分别是0.1、0.2、…，或者1， 2 。")]),_._v(" "),v("li",[_._v("子图就是父图中被分解的加工号。")]),_._v(" "),v("li",[_._v("子图中的加工号是由图号、圆点和序号组成，如：1.12，1.3 等等。")])])])]),_._v(" "),v("h3",{attrs:{id:"_1-4-其他注意"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-其他注意"}},[_._v("#")]),_._v(" 1.4 其他注意")]),_._v(" "),v("ul",[v("li",[_._v("命名。应适当的为数据流、加工、数据存储以及外部实体命名，名字应该反映该成分的实际含义，避免使用空洞的名字。")]),_._v(" "),v("li",[_._v("画数据流图，不是画控制流。**数据流反映系统“做什么”，不反映“如何做”，**因此箭头上的数据流名称只能是名词或名词短语，整个图中不反映加工的执行顺序。")]),_._v(" "),v("li",[_._v("一个加工的输出数据流，不应与输入数据流同名，即使他们的组成完全相同。")]),_._v(" "),v("li",[_._v("允许一个加工有多条数据流流向另一个加工，也允许一个加工有两条相同的输出数据流流向不同的加工。")]),_._v(" "),v("li",[_._v("编号。如果一张数据流图中的某个加工分解成另一张数据流图时，则上层图为父图，直接下层图为子图。子图及其所有的加工都应编号。")]),_._v(" "),v("li",[_._v("保持父图与子图的平衡。**也就是说，父图中的某加工的输入输出流必须与他的所有子图的输入输出数据流在数量上和名字上相同。**值得注意的是，如果父图中的一个输入(输出)数据流对应于子图中的几个输入(输出)数据流，而子图中组成这些数据流的数据项的全体正好是父图中的这一个数据流，那么他们仍然算是平衡的。")]),_._v(" "),v("li",[_._v("在自顶向下的分解过程中，若一个数据存储首次出现时，只与一个加工有关系，那么这个数据存储应作为这个加工的内部文件而不必画出。")]),_._v(" "),v("li",[_._v("保持数据守恒，也就是，一个加工的所有输出数据流中的数据必须能从该加工的输入流中直接获得，或者通过该加工能产生的数据。")]),_._v(" "),v("li",[_._v("每个加工必须既有输入数据流，又有输出数据流。")]),_._v(" "),v("li",[_._v("在整套数据流图中，每个数据存储必须既有读的数据流，又有写的数据流。但是在某张子图中，可能只有读没有写，或者只有写没有读。")]),_._v(" "),v("li",[_._v("局部数据存储。当某层数据流图中的数据存储不是父图中相应加工的外部接口，而只是本图中某些加工之间的数据接口，则称这些数据存储为局部数据存储。")]),_._v(" "),v("li",[_._v("提高数据流图的易懂性。注意合理分解，要把一个加工分解成几个功能相对独立的子加工，这样可以减少加工之间输入、输出数据流的数目，增加数据流图的可理解性。")])]),_._v(" "),v("h2",{attrs:{id:"_2-数据流图的画法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据流图的画法"}},[_._v("#")]),_._v(" 2."),v("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[_._v("数据流图"),v("OutboundLink")],1),_._v("的画法")]),_._v(" "),v("h3",{attrs:{id:"_2-1-数据流图的优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-数据流图的优点"}},[_._v("#")]),_._v(" 2.1 数据流图的优点")]),_._v(" "),v("p",[_._v("数据流图的优点：")]),_._v(" "),v("ol",[v("li",[_._v("在数据流图中没有任何具体的物理元素，它只是描绘信息在软件中流动和被处理的情况。")]),_._v(" "),v("li",[_._v("因为数据流图是系统逻辑功能的图形表示，即使不是专业的计算机技术人员也容易理解它，所以是分析员与用户之间极好的沟通工具。")]),_._v(" "),v("li",[_._v("设计数据流图时只需考虑系统必须完成的基本逻辑功能，完全不需考虑怎样具体地实现这些功能，因此，它也是今后进行软件设计很好的出发点。")]),_._v(" "),v("li",[_._v("数据流图可以在任何抽象层次上被用来表示系统或软件。事实上，数据流图可以被分层次地画，层次越低（在数据流图中1层比0层的层次更等）表现出的信息流细节和功能细节也越多。数据流图既提供了功能建模机制、也提供了信息流建模机制。")])]),_._v(" "),v("h3",{attrs:{id:"_2-2-数据流图的基本符号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-数据流图的基本符号"}},[_._v("#")]),_._v(" 2.2 数据流图的基本符号")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/eba1b595309143648518d358c55f62b4.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("p",[_._v("数据流图有4种基本符号：")]),_._v(" "),v("ul",[v("li",[_._v("正方形（或立方体）表示数据的源点或终点；")]),_._v(" "),v("li",[_._v("圆角矩形（或圆形）代表变换数据的处理；")]),_._v(" "),v("li",[_._v("开口矩形（或两条平行横线）代表数据存储；")]),_._v(" "),v("li",[_._v("箭头表示数据流，即特定数据的流动方向。")])]),_._v(" "),v("p",[_._v("数据流说明：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/887ade5998cb477ba453a3d46c71806f.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("p",[_._v("注意：")]),_._v(" "),v("ul",[v("li",[_._v("处理并不一定是一个程序。一个处理框可以代表一系列程序、单个程序或者程序的一个模块；它甚至可以代表用穿孔机穿孔或目视检查数据正确性等人工处理过程。")]),_._v(" "),v("li",[_._v("一个数据存储也并不等同于一个文件，它可以表示一个文件、文件的一部分、数据库的元素、记录的一部分等；数据可以存储在磁盘、磁带、磁鼓、主存、微缩胶片、穿孔卡片及其他任何介质上（包括人的记忆）。")]),_._v(" "),v("li",[v("code",[_._v("数据存储和数据流都是数据，仅仅所处的状态不同。数据存储是处于静止状态的数据，数据流是处于运动中的数据")]),_._v("。")]),_._v(" "),v("li",[v("code",[_._v("通常在数据流图中忽略出错处理，也不包括诸如打开或关闭文件之类的内务处理，数据流图的基本要点是描绘“做什么”而不考虑“怎样做”")]),_._v("。")]),_._v(" "),v("li",[_._v("有时数据的源点和终点相同，这时如果只用一个符号代表数据的源点和终点，则将有两个箭头和这个符号相连（一个进一个出），可能其中一条箭头线相当长，这将降低数据流图的清晰度。另一种表示方法是再重复画一个同样的符号（正方形或立方体）表示数据的终点。有时数据存储也需要重复，以增加数据流图的清晰程度。为了避免可能引起的误解，如果代表同一个事物的同样符号在图中出现在n个地方，则在这个符号的一个角上（比如左上角）画n−1条短斜线做标记。")])]),_._v(" "),v("h2",{attrs:{id:"_3-示例-工厂订单报表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-示例-工厂订单报表"}},[_._v("#")]),_._v(" 3.示例：工厂订单报表")]),_._v(" "),v("p",[_._v("假设一家工厂的"),v("code",[_._v("采购部每天需要一张订货报表")]),_._v("，报表按零件编号排序，表中列出所有需要再次订货的零件。对于每个需要再次订货的零件应该列出下述数据:零件编号，零件名称，订货数量，目前价格，主要供应者，次要供应者。"),v("code",[_._v("零件入库或出库称为事务")]),_._v("，通过放在仓库中的CRT终端把事务报告给订货系统。当某种零件的库存数量少于库存量临界值时就应该再次订货。")]),_._v(" "),v("h3",{attrs:{id:"_3-1-数据流图成分分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-数据流图成分分析"}},[_._v("#")]),_._v(" 3.1 数据流图成分分析")]),_._v(" "),v("p",[_._v("数据流图有4种成分："),v("code",[_._v("源点和终点、处理、数据存储和数据流")]),_._v("。画出上述定货系统的数据流图可采用以下步骤。")]),_._v(" "),v("ol",[v("li",[v("code",[_._v("首先考虑数据的源点和终点")]),_._v("，从上面对系统的描述可以知道“采购部每天需要一张订货报表”，“通过放在仓库中的终端把事务报告给订货系统”，所以"),v("code",[_._v("采购员是数据终点，而仓库管理员是数据源点")]),_._v("。")]),_._v(" "),v("li",[v("code",[_._v("接下来考虑处理")]),_._v("。再一次阅读问题描述，“采购部需要报表”，显然他们还没有这种报表，因此必须有一个用于产生报表的处理。事务的后果是改变零件库存量，而任何改变数据的操作都是处理，因此，对事务进行的加工是另一个处理。注意，在问题描述中并没有明显地提到需要对事务进行处理，但是通过分析可以看出这种需要。")]),_._v(" "),v("li",[v("code",[_._v("最后考虑数据流和数据存储")]),_._v("。系统把订货报表送给采购部，因此订货报表是一个数据流；事务需要从仓库送到系统中，显然事务是另一个数据流。产生报表和处理事务这两个处理在时间上明显不匹配：每当有一个事务发生时立即处理它，然而每天只产生一次订货报表，因此，用来产生订货报表的数据必须存放一段时间，也就是应该有一个数据存储（"),v("code",[_._v("存储着订货报表的数据，每当订货报表的数据有更新时，可以立即获取最新的订货报表的数据，这样就可以实现每当有一个事务发生时立即处理它")]),_._v("）。")])]),_._v(" "),v("p",[_._v("下表列出了上面分析的结果，其中加星号标记的是在问题描述中隐含的成分。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/046af817fbf24923a43b2d557a5336f7.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("h3",{attrs:{id:"_3-2-开始画数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-开始画数据流图"}},[_._v("#")]),_._v(" 3.2 开始画数据流图")]),_._v(" "),v("p",[_._v("一旦把数据流图的4种成分分离出来后，就可以着手画数据流图了。但是要注意，数据流图是系统的逻辑模型，而任何计算机系统实质上都是信息处理系统，也就是说计算机系统本质上都是把输入数据变换成输出数据。因此，任何系统的基本模型都由若干个数据源点/终点以及一个处理组成，这个处理就代表了系统对数据加工变换的基本功能。")]),_._v(" "),v("h3",{attrs:{id:"_3-3-顶层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-顶层数据流图"}},[_._v("#")]),_._v(" 3.3 顶层数据流图")]),_._v(" "),v("p",[_._v("对于上述的定货系统可以画出下图所示的顶层数据流图"),v("code",[_._v("（突出表明了数据的源点和终点）")]),_._v("。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/3ba3eb7c6f744b85b9f21bdfd5adb35f.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("p",[_._v("从"),v("strong",[_._v("顶层数据流图")]),_._v("这样非常高的抽象层次开始画数据流图是一个好办法。在这个高层次的数据流图上是否列出了所有给定的数据源点 / 终点是一目了然的，因此它是很有价值的沟通工具。")]),_._v(" "),v("h3",{attrs:{id:"_3-4-第0层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-第0层数据流图"}},[_._v("#")]),_._v(" 3.4 第0层数据流图")]),_._v(" "),v("p",[v("code",[_._v("顶层数据流图")]),_._v("太抽象了，从这张图上所能了解到的信息非常有限。"),v("code",[_._v("下一步应该把基本系统模型细化，描绘系统的主要功能")]),_._v("。")]),_._v(" "),v("p",[_._v("由于 “产生报表” 和 “处理事务” 是该系统必须完成的两个主要功能，它们将代替图顶层数据流图中的“订货系统”。此外，细化后的数据流图中还增加了两个数据存储：处理事务需要“库存清单”数据；产生报表和处理事务在不同时间，因此需要存储“定货信息”。除了2.1节（2.1 数据流图有4种成分分析）的表中列出的两个数据流之外还有另外两个数据流，它们与数据存储相同。这是因为从一个数据存储中取出来的或放进去的数据通常和原来存储的数据相同，也就是说，数据存储和数据流只不过是同样数据的两种不同形式（事务 <–> 库存清单，订货信息 <–> 订货报表）。\n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/a2052e7924284f6bb1b9bcbfe0d47318.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("blockquote",[v("p",[_._v("给处理和数据存储都加了编号，这样做的目的是便于引用和追踪。")])]),_._v(" "),v("h3",{attrs:{id:"_3-5-第1层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-第1层数据流图"}},[_._v("#")]),_._v(" 3.5 第1层数据流图")]),_._v(" "),v("p",[_._v("接下来应该对功能级数据流图中描绘的系统主要功能进一步细化。考虑通过系统的逻辑数据流，当发生一个事务时必须首先接收它；随后按照事务的内容修改库存清单；最后如果更新后的库存量少于库存量临界值时，则应该再次定货，也就是需要处理定货信息。因此，把“处理事务”这个功能分解为下述3个步骤：“接收事务”、“更新库存清单”和“处理订货”，这在逻辑上是合理的。")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/f99b95acfa87410b8dd19b99b7baffc9.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("p",[_._v("我们为什么不进一步分解“产生报表”这个功能呢？因为订货报表中需要的数据在存储的订货信息中全都有，产生报表只不过是按一定顺序排列这些信息，再按一定格式打印出来。然而这些考虑纯属具体实现的细节，不应该在数据流图中表现。同样道理，对“接收事务”或“更新库存清单”等功能也没有必要进一步细化。"),v("code",[_._v("总之，当进一步分解将涉及如何具体地实现一个功能时，就不应该再分解了")]),_._v("。")]),_._v(" "),v("blockquote",[v("p",[_._v("在对数据流图分层细化时必须保持信息连续性，即当把一个处理分解为一系列处理时，分解前和分解后的输入/输出数据流必须相同。")])]),_._v(" "),v("p",[_._v("还应该注意在数据流图中对处理进行编号的方法。处理1.1，1.2和1.3是更高层次的数据流图中处理1的组成元素。如果处理2被进一步分解，它的组成元素的编号将是2.1， 2.2……如果把处理1.1进一步分解，则将得到编号为1.1.1，1.1.2……的处理，以此类推。")]),_._v(" "),v("h3",{attrs:{id:"_3-6-补充-数据流图命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-补充-数据流图命名规范"}},[_._v("#")]),_._v(" 3.6 补充: 数据流图命名规范")]),_._v(" "),v("p",[_._v("数据流图中每个成分的命名是否恰当，直接影响数据流图的可理解性。\n因此，给这些成分起名字时应该仔细推敲。")]),_._v(" "),v("p",[_._v("数据源点/终点并不需要在开发目标系统的过程中设计和实现，它并不属于数据流图的核心内容，只不过是目标系统的外围环境部分（可能是人员、计算机外部设备或传感器装置）。通常，为数据源点 / 终点命名时采用它们在问题域中习惯使用的名字（如“采购员”、“仓库管理员”等）。")]),_._v(" "),v("blockquote",[v("p",[_._v("数据流（或数据存储）命名：")])]),_._v(" "),v("ul",[v("li",[_._v("名字应代表整个数据流（或数据存储）的内容，而不是仅仅反映它的某些成分。")]),_._v(" "),v("li",[_._v("不要使用空洞的、缺乏具体含义的名字（如“数据”、“信息”、“输入”之类）。")]),_._v(" "),v("li",[_._v("如果在为某个数据流（或数据存储）起名字时遇到了困难，则很可能是因为对数据流图分解不恰当造成的，应该试试重新分解，看是否能克服这个困难。")])]),_._v(" "),v("blockquote",[v("p",[_._v("处理命名：")])]),_._v(" "),v("ul",[v("li",[_._v("通常先为数据流命名，然后再为与之相关联的处理命名。这样命名比较容易，而且体现了人类习惯的“由表及里”的思考过程。")]),_._v(" "),v("li",[_._v("名字应该反映整个处理的功能，而不是它的一部分功能。")]),_._v(" "),v("li",[_._v("名字最好由一个具体的及物动词加上一个具体的宾语组成。应该尽量避免使用“加工”、“处理”等空洞笼统的动词作为名字。")]),_._v(" "),v("li",[_._v("通常名字中仅包括一个动词。如果必须用两个动词才能描述整个处理的功能，则把这个处理再分解成两个处理可能更恰当些。")]),_._v(" "),v("li",[_._v("如果在为某个处理命名时遇到困难，则很可能是发现了分解不当的迹象，应考虑重新分解。")])]),_._v(" "),v("h2",{attrs:{id:"_4-练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-练习"}},[_._v("#")]),_._v(" 4.练习")]),_._v(" "),v("h3",{attrs:{id:"_4-1-教务管理子系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-教务管理子系统"}},[_._v("#")]),_._v(" 4.1 教务管理子系统")]),_._v(" "),v("p",[_._v("教务管理是一项需求周密计划、严谨安排的工作，要依据教师、学生信息进行合理安排。")]),_._v(" "),v("blockquote",[v("p",[_._v("教务管理子系统的需求描述：")])]),_._v(" "),v("ul",[v("li",[_._v("开学阶段，需要教师提交开课申请进行开课，学生根据老师的开课信息，选择课程，教务处生成学生课表、教师课表。")]),_._v(" "),v("li",[_._v("期末阶段，需要根据开课情况对学生进行考试安排，对教师进行监考安排，以及学生考试成绩管理。")]),_._v(" "),v("li",[_._v("学期结束，需要对学生成绩进行统计，计算绩点，排名，评定奖学金。")])]),_._v(" "),v("h3",{attrs:{id:"_4-2-顶层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-顶层数据流图"}},[_._v("#")]),_._v(" 4.2 顶层数据流图")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/b693d6634fd64aa0818998909107e3b8.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("h3",{attrs:{id:"_4-3-第0层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-第0层数据流图"}},[_._v("#")]),_._v(" 4.3 第0层数据流图")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/ee6a029c391942eb9fc7ecfd068f450b.png",alt:"在这里插入图片描述"}})]),_._v(" "),v("h3",{attrs:{id:"_4-4-第1层数据流图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-第1层数据流图"}},[_._v("#")]),_._v(" 4.4 第1层数据流图")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/fbc808338f7a4d82aea313ec8ed66199.png",alt:"在这里插入图片描述"}})])])}),[],!1,null,null,null);v.default=r.exports}}]);