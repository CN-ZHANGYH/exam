(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{347:function(t,_,a){"use strict";a.r(_);var v=a(6),i=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"uml概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#uml概述"}},[t._v("#")]),t._v(" UML概述")]),t._v(" "),_("h3",{attrs:{id:"_1-uml简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-uml简介"}},[t._v("#")]),t._v(" 1.UML简介")]),t._v(" "),_("p",[_("code",[t._v("UML (Unified Modeling Language)为面向对象软件设计提供统一的、标准的、可视化的建模语言。适用于描述以用例为驱动，以体系结构为中心的软件设计的全过程。")])]),t._v(" "),_("p",[t._v("UML的定义包括UML语义和UML表示法两个部分。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("UML语义")]),t._v(":UML对语义的描述使开发者能在语义上取得一致认识，消除了因人而异的表达方法所造成的影响；")]),t._v(" "),_("li",[_("strong",[t._v("UML表示法")]),t._v(":UML表示法定义UML符号的表示法，为开发者或开发工具使用这些图形符号和文本语法为系统建模提供了标准")])]),t._v(" "),_("h3",{attrs:{id:"_2-uml模型图的构成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-uml模型图的构成"}},[t._v("#")]),t._v(" 2.UML模型图的构成")]),t._v(" "),_("h4",{attrs:{id:"_2-1-事物"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-事物"}},[t._v("#")]),t._v(" 2.1 事物")]),t._v(" "),_("p",[t._v("事物[Things] (4种)：UML模型中最基本的构成元素，是具有代表性的成分的抽象")]),t._v(" "),_("ol",[_("li",[t._v("构件事物：UML模型的静态部分，描述概念或物理元素")])]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("类")]),t._v("：具有相同属性相同操作相同关系相同语义的对象的描述")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("接口")]),t._v("：描述元素的外部可见行为，即服务集合的定义说明")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("协作")]),t._v("：描述了一组事物间的相互作用的集合")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("用例")]),t._v("：代表一个系统或系统的一部分行为，是一组动作序列的集合")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("构件")]),t._v("：系统中物理存在，可替换的部件")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("节点")]),t._v("：运行时存在的物理元素")])]),t._v(" "),_("li",[_("blockquote",[_("p",[t._v("另外，参与者、信号应用、文档库、页表等都是上述基本事物的变体")])])])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("行为事物：UML模型图的动态部分，描述跨越空间和时间的行为")])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("交互")]),t._v("：实现某功能的一组构件事物之间的消息的集合，涉及消息、动作序列、链接")]),t._v(" "),_("li",[_("code",[t._v("状态机")]),t._v("：描述事物或交互在生命周期内响应事件所经历的状态序列")])]),t._v(" "),_("p",[t._v("​    3.分组事物：UML模型图的组织部分，描述事物的组织结构")]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("包")]),t._v(":把元素组织成组的机制")]),t._v(" "),_("p",[t._v("4.注释事物：UML模型的解释部分，用来对模型中的元素进行说明、解释")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("注解")]),t._v(":对元素进行约束或解释的简单符号")])])]),t._v(" "),_("h4",{attrs:{id:"_2-2-关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-关系"}},[t._v("#")]),t._v(" 2.2 关系")]),t._v(" "),_("p",[_("strong",[t._v("关系[Relationships]")]),t._v("：关系把事物紧密联系在一起")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("依赖[depedency]")]),t._v(" 是两个事物之间的语义关系，其中一个事物(独立事物)发生变化，会影响到  另一个事物(依赖事物)的语义")]),t._v(" "),_("li",[_("strong",[t._v("关联[association]")]),t._v(" 是一种结构关系，它指明一个事物的对象与另一个事物的对象间的联系")]),t._v(" "),_("li",[_("strong",[t._v("泛化[generalization]")]),t._v(" 是一种特殊/一般的关系。也可以看作是常说的继承关系")]),t._v(" "),_("li",[_("strong",[t._v("实现[realization]")]),t._v(" 是类元之间的语义关系，其中的一个类元指定了由另一个类元保证执行的契约")])]),t._v(" "),_("h4",{attrs:{id:"_2-3-图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-图"}},[t._v("#")]),t._v(" 2.3 图")]),t._v(" "),_("p",[_("strong",[t._v("图[Diagrams]")]),t._v("：图是事物和关系的可视化表示")]),t._v(" "),_("p",[_("strong",[t._v("1. 用例图[Use Case Diagram]")]),t._v(":")]),t._v(" "),_("p",[t._v("用例图是从用户角度描述系统功能， 是用户所能观察到的系统功能的模型图，用例是系统中的一个功能单元")]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/d5a626368942466fafa93b054838d0b8.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("2.类图[Class Diagram]")]),t._v(":")]),t._v(" "),_("ul",[_("li",[t._v("类图描述系统中类的静态结构。不仅定义系统中的类，表示类之间的联系如关联、依赖、聚合等，也包括类的内部结构(类的属性和操作);")]),t._v(" "),_("li",[t._v("类图是以类为中心类组织的，类图中的其他元素或属于某个类或与类相关联")])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/0834839d4ccb458a9b8a32045fbb2e7c.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("3.对象图[Object Diagram]:")])]),t._v(" "),_("p",[t._v("对象图是类图的实例，几乎使用与类图完全相同的标识。他们的不同点在于对象图显示类的多个对象实例，而不是实际的类")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/d87ef7d22263413a97bfb498e4f0879e.png",alt:"img"}})]),t._v(" "),_("p",[_("strong",[t._v("4.顺序图[Sequence Diagram]")]),t._v(":")]),t._v(" "),_("ul",[_("li",[t._v("顺序图显示对象之间的动态合作关系,他强调对象之间消息发送的顺序，同时显示对象之间的交互;")]),t._v(" "),_("li",[t._v("顺序图的一个用途是用来表示用例中的行为顺序。当执行一个用例行为时，顺序图中的每条消息对应了一个类操作或引起状态转换的触发事件")])]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/6fed31852a3148ce96709ed01118a96b.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("5.协作图[Collaboration Diagram]")]),t._v(":")]),t._v(" "),_("ul",[_("li",[t._v("协作图描述对象间的协作关系，协作图跟顺序图相似，显示对象间的动态合作关系。除显示信息交换外，协作图还显示对象以及他们之间的关系")]),t._v(" "),_("li",[t._v("协作图的一个用途是表示一个类操作的实现")])]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/bc292e5d060c4208b7421b3d1c279187.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("6.状态图[State Chart Diagram]")]),t._v(":")]),t._v(" "),_("p",[t._v("状态图是一个类对象所可能经历的所有历程的模型图。状态图由对象的各个状态和连接这些状态的转换组成")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/01cf03f5aeb2488d8be2021c6a0cdc92.png",alt:"img"}})]),t._v(" "),_("p",[_("strong",[t._v("7.活动图[Activity Diagram]")]),t._v(":")]),t._v(" "),_("ul",[_("li",[t._v("活动图是状态图的一个变体，用来描述执行算法的工作流程中涉及的活动")]),t._v(" "),_("li",[t._v("活动图描述了一组顺序的或并发的活动")])]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/7879ff2fd3ba42eabbbe62cab4d74183.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("8.构件图[Component Diagram]:")])]),t._v(" "),_("p",[t._v("构件图描述系统的构件模型以及各构件之间的依赖关系，以便通过这些依赖关系来估计对系统构件的修改给系统可能带来的影响")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/20200117193121143.png",alt:"img"}})]),t._v(" "),_("p",[_("strong",[t._v("9.部署图[Deployment Diagram]:")])]),t._v(" "),_("p",[t._v("部署视图描述位于节点实例上的运行构件实例的安排。节点是一组运行资源，如计算机、设备或存储器。这个视图允许评估分配结果和资源分配")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/544cfb1db3b04bf8b97b607446411473.png",alt:"img"}})]),t._v(" "),_("p",[_("strong",[t._v("（四）各UML图的关系")])]),t._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/ebcfa9399c6c437c90ccc557e90f899a.png",alt:"img"}}),t._v(" "),_("p",[_("strong",[t._v("5类UML图的分类法：")])]),t._v(" "),_("ol",[_("li",[_("code",[t._v("用例图")]),t._v("：对系统提供提供功能的描述")]),t._v(" "),_("li",[_("code",[t._v("静态图")]),t._v("：描述系统的静态结构，包括 类图 和 对象图")]),t._v(" "),_("li",[_("code",[t._v("行为图")]),t._v("：描述系统的动态行为和组成系统的对象间的交互关系，包括 状态图 和 活动图")]),t._v(" "),_("li",[_("code",[t._v("交互图")]),t._v("：描述对象间的交互关系，包括 顺序图 和 协作图")]),t._v(" "),_("li",[_("code",[t._v("实现图")]),t._v("：提供关于系统实现方面的信息，包括 构件图 和 部署图")])]),t._v(" "),_("h3",{attrs:{id:"_3-uml语法描述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-uml语法描述"}},[t._v("#")]),t._v(" 3. UML语法描述")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/Kryust/image/main/img/1a2af09e0e2349c1b2acb8408080dee5.png",alt:"img"}})])])}),[],!1,null,null,null);_.default=i.exports}}]);